#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent
import os
import secrets

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

# Generate Password

def generate_random_password(length):
    # Generate random bytes and convert them to a hexadecimal string
    random_bytes = os.urandom(length)
    password = random_bytes.hex()
    return password[:length]

#This is specific to you module, so you need to change it accordingly.

# configure postgres db variables
POSTGRES_USER="postgres"
POSTGRES_PASSWORD=generate_random_password(16)
POSTGRES_DB="umami"
postgres_config = {
    "POSTGRES_USER": POSTGRES_USER,
    "POSTGRES_PASSWORD": POSTGRES_PASSWORD,
    "POSTGRES_DB": POSTGRES_DB
}
agent.write_envfile("database.env", postgres_config)

# DATABASE_URL: postgresql://umami:umami@db:5432/umami
#       DATABASE_TYPE: postgresql
#       APP_SECRET: replace-me-with-a-random-string
DATABASE_URL = "postgresql://"+POSTGRES_USER+":"+POSTGRES_PASSWORD+"@postgresql-app:5432/"+POSTGRES_DB
DATABASE_TYPE = "postgresql"
APP_SECRET = secrets.token_urlsafe(32)
umami_config = {
    "DATABASE_URL": DATABASE_URL,
    "DATABASE_TYPE": DATABASE_TYPE,
    "APP_SECRET": APP_SECRET
}
agent.write_envfile("umami.env", umami_config)

#agent.dump_env()
